export const questions = [
	{
		content:
			'Добро пожаловать в Transform Puzzle. Игра, в которой тебе нужно подвинуть один из кусочков несобранного пазла с помощью технологии CSS - Transform! Передвинь кусочек пазла, используя свойство transform: translateX(x).',
		viewStyle: ['flex-direction: row', 'align-items: start'],
		itemId: 0,
		option: '',
		imageStyle: ''
	},
	{
		content:
			'В этот раз тебе нужно передвинуть кусочек по вертикали и для этого тебе следует использовать translateY(y).',
		viewStyle: [],
		itemId: 1,
		option: '',
		imageStyle: ''
	},
	{
		content:
			'Отлично! Ты разобрался с частными случаями свойства translate. Теперь попробуй использовать общий подход, где мы передаем сразу две оси x и y.',
		viewStyle: ['align-items: flex-start'],
		itemId: 4,
		option: '',
		imageStyle: ''
	},
	{
		content:
			'Упс.. Кто-то сильно напортачил с размерами пазла. Но это для нас не проблема, ведь есть свойство scale(x). Попробуй увеличить размер пазлы в 2 раза.',
		viewStyle: [],
		itemId: 1,
		option: '',
		imageStyle: 'transform: translateY(120px) scale(0.5)'
	},
	{
		content:
			'Опять проблемы с размером. Но на этот раз нам нужно наш кусочек пазла вытянулся по вертикали. Мы можем использовать свойство scale(x,y). Попробуй уменьшить Y в 2 раза',
		viewStyle: [],
		itemId: 1,
		option: '',
		imageStyle: 'transform: translateY(120px) scale(1,2)'
	},
	{
		content:
			'Снова проблемы с размером. В этот раз кусочек пазла вытянулся по горизонталию. Используй то же свойство, что и в прошлый раз, но на этот раз нужно уменьшить в 2 раза X.',
		viewStyle: [],
		itemId: 1,
		option: '',
		imageStyle: 'transform: translateY(120px) scale(2,1)'
	},
	{
		content:
			'Отлично! Ты разобрался c тем как мы можем менять размер, с помощью свойства scale. Теперь у нас другая проблема, кто-то развернул наш кусочек пазла на 45 градусов. Используй свойство rotate(x). Только не забудь, что значение мы указываем в градусах(deg).',
		viewStyle: [],
		itemId: 4,
		option: '',
		imageStyle: 'transform: translateY(223px) rotate(-45deg)'
	},
	{
		content:
			'Помимо deg, в свойстве rotate, мы также можем использовать ключевое слово turn. Что означает полный оборот. \nНапример rotate(0.5turn) будет означать пол оборота или 180 градусов.',
		viewStyle: [],
		itemId: 4,
		option: '',
		imageStyle: 'transform: translateY(223px) rotate(-0.5turn)'
	},
	{
		content:
			'Рассмотрим последнее, но также важное свойство skew. Skew трансформирует элемент, наклоняя его в 2D-пространстве. Для его значения мы можем использовать градусы(deg) или обороты(turn). Попробуй наклонить элемент на 30 градусов по x-оси.',
		viewStyle: [],
		itemId: 4,
		option: '',
		imageStyle: 'transform: translateY(223px) skew(-30deg)'
	},
	{
		content:
			'Также мы можем наклонять элемент в оси Y, прописав skew(x,y) и положив x=0, Попробуй наклонить элемент на 30 градусов по y-оси.',
		viewStyle: [],
		itemId: 4,
		option: '',
		imageStyle: 'transform: translateY(223px) skew(0, -30deg)'
	},
	{
		content:
			'Отлично! Ты изучил все значения свойства transform и теперь ты можешь использовать несколько свойств одновременно. \nНо помни, что использовать свойства можно в определенном порядке. Например здесь нужно сначала использовать rotate, а потом translate.',
		viewStyle: [],
		itemId: 6,
		option: '',
		imageStyle: 'transform: rotate(180deg)'
	},
	{
		content:
			'Встречай еще более сложный уровень, где тебе предстоит описать 3 свойства одновременно. \nЧаще всего transalte нужно использовать последним, так как из-за наложения свойств друг на друга могут быть искажения.',
		viewStyle: [],
		itemId: 5,
		option: '',
		imageStyle: 'transform: rotate(45deg) scale(0.5)'
	}
];

export const finalText =
	'Поздравляем! Вы успешно завершили игру по обучению технологии Transform! Теперь у вас есть важные знания о том, как использовать Transform для создания анимаций в интерфейсе вашего приложения.\n\n Мы надеемся, что эта игра помогла вам углубить свои знания о Transform и вдохновила на дальнейшее исследование этой технологии. Помните, что использование Transform - это всего лишь один из способов создания анимаций на веб-страницах.\n\n Спасибо, что играли в нашу игру обучения Transform! Надеемся, что вам понравилось и до новых встреч в наших новых играх!';
